#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer.rb"
require_relative "retina_ast.rb"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        if @token.eql? "$" then
            "Unexpected EOF"
        else
            "Line #{@token.line}, column #{@token.column}: unexpected token #{@token.symbol}: #{@token.value}"   
        end
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 228)

def initialize(lexer)
    @lexer = lexer
end

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def next_token
    if @lexer.has_next_token then
        token = @lexer.next_token;
        return [token.symbol,token]
    else
        return nil
    end
end

def parse
    do_parse
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    32,    77,   120,     7,    45,    32,    82,     4,    33,     6,
    32,    77,   126,    33,    12,    13,   135,    40,    33,     4,
    41,   121,    14,    15,    32,    18,    76,    30,    28,    29,
    19,    32,    33,    16,    17,   136,    45,     6,    12,    33,
    67,    32,    34,    68,    27,    38,    39,    34,    12,    33,
    38,    39,    34,    12,    32,    38,    39,    69,    12,    32,
    70,    71,    33,    72,    12,    85,    34,    33,    86,    38,
    39,    12,    12,    34,    32,    76,    38,    39,    91,    12,
   119,   122,    33,    34,    32,    12,    38,    39,    45,    12,
   131,   131,    33,   133,    45,    32,    34,    45,    12,    38,
    39,    34,    12,    33,    38,    39,    32,    12,    60,    61,
    62,    63,    64,    32,    33,    45,    34,   165,   126,    38,
    39,    33,    12,    32,   169,   170,    34,    45,    32,    38,
    39,    33,    12,    12,   177,   178,    33,    34,    32,   179,
    38,    39,   180,    12,   181,    32,    33,   187,    34,   189,
   191,    38,    39,    33,    12,    34,    32,   203,    38,    39,
   206,    12,   nil,   nil,    33,    34,   nil,    32,    38,    39,
    34,    12,   nil,    38,    39,    33,    12,    32,   nil,   nil,
    34,   nil,   nil,    38,    39,    33,    12,    34,    32,   nil,
    38,    39,   nil,    12,   nil,    32,    33,   nil,    34,   nil,
    32,    38,    39,    33,    12,   nil,   nil,   nil,    33,    34,
    32,   nil,    38,    39,   nil,    12,   nil,   nil,    33,    34,
    32,   nil,    38,    39,   nil,    12,   nil,    32,    33,   nil,
    34,   nil,   nil,    38,    39,    33,    12,    34,   nil,   nil,
    38,    39,    34,    12,   nil,    38,    39,   111,    12,   nil,
   nil,    32,    34,   nil,   nil,    38,    39,   111,    12,    33,
   nil,   nil,    34,   115,   nil,    38,    39,   nil,    12,    34,
   nil,   nil,    38,    39,   nil,    12,   nil,   nil,    32,    60,
    61,    62,    63,    64,   nil,   nil,    33,   nil,   nil,   nil,
   nil,   nil,   nil,    34,   nil,   nil,    38,    39,   nil,    12,
   140,    15,   nil,    18,   nil,    30,    28,    29,    19,    32,
   nil,    16,    17,   nil,   nil,   nil,   nil,    33,   nil,   nil,
    34,   nil,    27,    38,    39,   nil,    12,   nil,   nil,   nil,
   nil,   143,    15,   nil,    18,   nil,    30,    28,    29,    19,
    32,   nil,    16,    17,   nil,   nil,   nil,   nil,    33,   nil,
   nil,    34,   nil,    27,    38,    39,   nil,    12,   nil,   nil,
   nil,   nil,   145,    15,    32,    18,   nil,    30,    28,    29,
    19,    32,    33,    16,    17,   nil,   nil,   nil,   nil,    33,
   nil,    32,    34,   nil,    27,    38,    39,   nil,    12,    33,
   nil,   nil,   nil,   146,    15,   nil,    18,   nil,    30,    28,
    29,    19,   nil,   147,    16,    17,    34,   nil,   nil,    38,
    39,   nil,    12,    34,    32,    27,    38,    39,   nil,    12,
   nil,   nil,    33,    34,   nil,   nil,    38,    39,   nil,    12,
   nil,   nil,   nil,   nil,   nil,   nil,   151,   152,   nil,   155,
   nil,    32,   nil,   nil,   156,   nil,    32,   153,   154,    33,
   nil,   nil,   nil,   164,    33,   nil,    34,    32,   163,    38,
    39,   nil,    12,   168,   152,    33,   155,   nil,    32,   nil,
   nil,   156,   nil,    32,   153,   154,    33,   nil,   nil,   nil,
   164,    33,   nil,    34,   nil,   163,    38,    39,    34,    12,
    32,    38,    39,   nil,    12,   nil,   nil,   nil,    33,    34,
    32,   nil,    38,    39,   nil,    12,   nil,   nil,    33,   nil,
    34,   nil,   nil,    38,    39,    34,    12,   nil,    38,    39,
   nil,    12,   186,    15,   nil,    18,   nil,    30,    28,    29,
    19,    32,    34,    16,    17,    38,    39,   nil,    12,    33,
   nil,   nil,    34,   nil,    27,    38,    39,   nil,    12,   nil,
   nil,   nil,   nil,   194,   152,   nil,   155,   nil,    32,   nil,
   nil,   156,   nil,    32,   153,   154,    33,   nil,   nil,   nil,
   164,    33,   nil,    34,   nil,   163,    38,    39,   nil,    12,
   197,   152,   nil,   155,   nil,    32,   nil,   nil,   156,   nil,
    32,   153,   154,    33,   nil,   nil,   nil,   164,    33,   nil,
    34,   nil,   163,    38,    39,    34,    12,   nil,    38,    39,
   nil,    12,   205,    15,   nil,    18,   nil,    30,    28,    29,
    19,    32,   nil,    16,    17,   nil,   nil,    34,   nil,    33,
    38,    39,    34,    12,    27,    38,    39,   nil,    12,   nil,
   nil,   nil,   nil,   207,   152,   nil,   155,   nil,    32,   nil,
   nil,   156,   nil,   nil,   153,   154,    33,   nil,   nil,   nil,
   164,   nil,   nil,    34,   nil,   163,    38,    39,   nil,    12,
   208,   152,   nil,   155,   nil,    32,   nil,   nil,   156,   nil,
   nil,   153,   154,    33,   nil,   nil,   nil,   164,   nil,   nil,
    34,   nil,   163,    38,    39,   nil,    12,   210,   152,   nil,
   155,   nil,    32,   nil,   nil,   156,   nil,   nil,   153,   154,
    33,   nil,   nil,   nil,   164,   nil,   nil,    34,   nil,   163,
    38,    39,   nil,    12,   211,   152,   nil,   155,   nil,    32,
   nil,   nil,   156,   nil,   212,   153,   154,    33,   nil,   nil,
   nil,   164,   nil,   nil,    34,   nil,   163,    38,    39,   nil,
    12,   216,    15,   nil,    18,   nil,    30,    28,    29,    19,
    32,   nil,    16,    17,   nil,   nil,   nil,   nil,    33,   nil,
    32,    34,   nil,    27,    38,    39,   nil,    12,    33,   nil,
   nil,   nil,   219,   152,   nil,   155,   nil,   nil,   nil,   nil,
   156,   nil,   nil,   153,   154,   nil,   nil,   nil,   nil,   164,
   nil,    32,    34,   nil,   163,    38,    39,   nil,    12,    33,
   nil,   nil,    34,   nil,   nil,    38,    39,   nil,    12,   nil,
   nil,   nil,   nil,   223,   152,   nil,   155,   nil,    32,   nil,
   nil,   156,   nil,   nil,   153,   154,    33,   nil,   nil,   nil,
   164,   nil,   nil,    34,   nil,   163,    38,    39,   nil,    12,
   225,   152,   nil,   155,   nil,   nil,   nil,   nil,   156,   nil,
   nil,   153,   154,   nil,   nil,   nil,   nil,   164,   nil,   nil,
    34,   nil,   163,    38,    39,   nil,    12,    60,    61,    62,
    63,    64,    65,    66,    54,    55,    56,    57,    58,    59,
    52,    53,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    51,
    60,    61,    62,    63,    64,    65,    66,    54,    55,    56,
    57,    58,    59,    52,   176,    60,    61,    62,    63,    64,
    65,    66,    54,    55,    56,    57,    58,    59,    52,    53,
    60,    61,    62,    63,    64,    65,    66,    54,    55,    56,
    57,    58,    59,    52,    53,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   185,   nil,   nil,   nil,   118,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   184,    60,    61,    62,    63,
    64,    65,    66,    54,    55,    56,    57,    58,    59,    52,
    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   218,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   217,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,    60,    61,    62,
    63,    64,    65,    66,    54,    55,    56,    57,    58,    59,
    52,    53,   nil,   nil,   nil,   nil,   144,    60,    61,    62,
    63,    64,    65,    66,    54,    55,    56,    57,    58,    59,
   nil,   209,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,    60,    61,    62,
    63,    64,    65,    66,   -92,   -92,   -92,   -92,   -92,   -92,
   nil,    93,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,    60,    61,    62,
    63,    64,    65,    66,   -92,   -92,   -92,   -92,   -92,   -92,
   nil,   193,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    92,    60,    61,    62,
    63,    64,    65,    66,    54,    55,    56,    57,    58,    59,
    52,    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   192,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    90,    60,    61,    62,    63,    64,
    65,    66,    54,    55,    56,    57,    58,    59,    52,    53,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   190,    60,    61,
    62,    63,    64,    65,    66,    54,    55,    56,    57,    58,
    59,    52,    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   204,    60,    61,    62,    63,    64,    65,    66,    54,    55,
    56,    57,    58,    59,    52,    53,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   222,    60,    61,    62,    63,    64,    65,
    66,    54,    55,    56,    57,    58,    59,    52,    53,   nil,
   132,    60,    61,    62,    63,    64,    65,    66,    54,    55,
    56,    57,    58,    59,    52,    53,   nil,   132,    60,    61,
    62,    63,    64,    65,    66,    54,    55,    56,    57,    58,
    59,    52,    53,   nil,   134,    60,    61,    62,    63,    64,
    65,    66,    54,    55,    56,    57,    58,    59,    52,    53,
    60,    61,    62,    63,    64,    65,    66,    54,    55,    56,
    57,    58,    59,    52,    53,    60,    61,    62,    63,    64,
    65,    66,   -92,   -92,   -92,   -92,   -92,   -92,    60,    61,
    62,    63,    64,    65,    66,   -92,   -92,   -92,   -92,   -92,
   -92,    60,    61,    62,    63,    64,    65,    66,   -92,   -92,
   -92,   -92,   -92,   -92,    60,    61,    62,    63,    64,    65,
    66,   -92,   -92,   -92,   -92,   -92,   -92 ]

racc_action_check = [
     9,    31,    82,     1,    40,    16,    40,     2,     9,     5,
    18,    89,    89,    16,     6,     7,   119,    11,    18,     0,
    14,    82,     9,     9,    19,     9,    31,     9,     9,     9,
     9,    32,    19,     9,     9,   119,    15,     0,    17,    32,
    21,    33,     9,    22,     9,     9,     9,    16,     9,    33,
    16,    16,    18,    16,    34,    18,    18,    23,    18,    52,
    24,    25,    34,    26,    30,    42,    19,    52,    43,    19,
    19,    44,    19,    32,    53,    47,    32,    32,    48,    32,
    81,    83,    53,    33,    54,    84,    33,    33,    86,    33,
   109,   112,    54,   114,   121,    55,    34,   122,   126,    34,
    34,    52,    34,    55,    52,    52,    56,    52,   107,   107,
   107,   107,   107,    57,    56,   136,    53,   138,   141,    53,
    53,    57,    53,    58,   150,   151,    54,   152,    59,    54,
    54,    58,    54,   154,   158,   159,    59,    55,    60,   160,
    55,    55,   161,    55,   162,    61,    60,   168,    56,   171,
   173,    56,    56,    61,    56,    57,    62,   194,    57,    57,
   197,    57,   nil,   nil,    62,    58,   nil,    63,    58,    58,
    59,    58,   nil,    59,    59,    63,    59,    64,   nil,   nil,
    60,   nil,   nil,    60,    60,    64,    60,    61,    65,   nil,
    61,    61,   nil,    61,   nil,    66,    65,   nil,    62,   nil,
    73,    62,    62,    66,    62,   nil,   nil,   nil,    73,    63,
    74,   nil,    63,    63,   nil,    63,   nil,   nil,    74,    64,
    76,   nil,    64,    64,   nil,    64,   nil,    77,    76,   nil,
    65,   nil,   nil,    65,    65,    77,    65,    66,   nil,   nil,
    66,    66,    73,    66,   nil,    73,    73,    73,    73,   nil,
   nil,    91,    74,   nil,   nil,    74,    74,    74,    74,    91,
   nil,   nil,    76,    76,   nil,    76,    76,   nil,    76,    77,
   nil,   nil,    77,    77,   nil,    77,   nil,   nil,   124,   108,
   108,   108,   108,   108,   nil,   nil,   124,   nil,   nil,   nil,
   nil,   nil,   nil,    91,   nil,   nil,    91,    91,   nil,    91,
   124,   124,   nil,   124,   nil,   124,   124,   124,   124,   127,
   nil,   124,   124,   nil,   nil,   nil,   nil,   127,   nil,   nil,
   124,   nil,   124,   124,   124,   nil,   124,   nil,   nil,   nil,
   nil,   127,   127,   nil,   127,   nil,   127,   127,   127,   127,
   129,   nil,   127,   127,   nil,   nil,   nil,   nil,   129,   nil,
   nil,   127,   nil,   127,   127,   127,   nil,   127,   nil,   nil,
   nil,   nil,   129,   129,   134,   129,   nil,   129,   129,   129,
   129,   130,   134,   129,   129,   nil,   nil,   nil,   nil,   130,
   nil,   144,   129,   nil,   129,   129,   129,   nil,   129,   144,
   nil,   nil,   nil,   130,   130,   nil,   130,   nil,   130,   130,
   130,   130,   nil,   130,   130,   130,   134,   nil,   nil,   134,
   134,   nil,   134,   130,   137,   130,   130,   130,   nil,   130,
   nil,   nil,   137,   144,   nil,   nil,   144,   144,   nil,   144,
   nil,   nil,   nil,   nil,   nil,   nil,   137,   137,   nil,   137,
   nil,   149,   nil,   nil,   137,   nil,   153,   137,   137,   149,
   nil,   nil,   nil,   137,   153,   nil,   137,   155,   137,   137,
   137,   nil,   137,   149,   149,   155,   149,   nil,   156,   nil,
   nil,   149,   nil,   164,   149,   149,   156,   nil,   nil,   nil,
   149,   164,   nil,   149,   nil,   149,   149,   149,   153,   149,
   184,   153,   153,   nil,   153,   nil,   nil,   nil,   184,   155,
   167,   nil,   155,   155,   nil,   155,   nil,   nil,   167,   nil,
   156,   nil,   nil,   156,   156,   164,   156,   nil,   164,   164,
   nil,   164,   167,   167,   nil,   167,   nil,   167,   167,   167,
   167,   183,   184,   167,   167,   184,   184,   nil,   184,   183,
   nil,   nil,   167,   nil,   167,   167,   167,   nil,   167,   nil,
   nil,   nil,   nil,   183,   183,   nil,   183,   nil,   188,   nil,
   nil,   183,   nil,   191,   183,   183,   188,   nil,   nil,   nil,
   183,   191,   nil,   183,   nil,   183,   183,   183,   nil,   183,
   188,   188,   nil,   188,   nil,   209,   nil,   nil,   188,   nil,
   196,   188,   188,   209,   nil,   nil,   nil,   188,   196,   nil,
   188,   nil,   188,   188,   188,   191,   188,   nil,   191,   191,
   nil,   191,   196,   196,   nil,   196,   nil,   196,   196,   196,
   196,   198,   nil,   196,   196,   nil,   nil,   209,   nil,   198,
   209,   209,   196,   209,   196,   196,   196,   nil,   196,   nil,
   nil,   nil,   nil,   198,   198,   nil,   198,   nil,   199,   nil,
   nil,   198,   nil,   nil,   198,   198,   199,   nil,   nil,   nil,
   198,   nil,   nil,   198,   nil,   198,   198,   198,   nil,   198,
   199,   199,   nil,   199,   nil,   201,   nil,   nil,   199,   nil,
   nil,   199,   199,   201,   nil,   nil,   nil,   199,   nil,   nil,
   199,   nil,   199,   199,   199,   nil,   199,   201,   201,   nil,
   201,   nil,   202,   nil,   nil,   201,   nil,   nil,   201,   201,
   202,   nil,   nil,   nil,   201,   nil,   nil,   201,   nil,   201,
   201,   201,   nil,   201,   202,   202,   nil,   202,   nil,   213,
   nil,   nil,   202,   nil,   202,   202,   202,   213,   nil,   nil,
   nil,   202,   nil,   nil,   202,   nil,   202,   202,   202,   nil,
   202,   213,   213,   nil,   213,   nil,   213,   213,   213,   213,
   215,   nil,   213,   213,   nil,   nil,   nil,   nil,   215,   nil,
   217,   213,   nil,   213,   213,   213,   nil,   213,   217,   nil,
   nil,   nil,   215,   215,   nil,   215,   nil,   nil,   nil,   nil,
   215,   nil,   nil,   215,   215,   nil,   nil,   nil,   nil,   215,
   nil,   221,   215,   nil,   215,   215,   215,   nil,   215,   221,
   nil,   nil,   217,   nil,   nil,   217,   217,   nil,   217,   nil,
   nil,   nil,   nil,   221,   221,   nil,   221,   nil,   224,   nil,
   nil,   221,   nil,   nil,   221,   221,   224,   nil,   nil,   nil,
   221,   nil,   nil,   221,   nil,   221,   221,   221,   nil,   221,
   224,   224,   nil,   224,   nil,   nil,   nil,   nil,   224,   nil,
   nil,   224,   224,   nil,   nil,   nil,   nil,   224,   nil,   nil,
   224,   nil,   224,   224,   224,   nil,   224,    20,    20,    20,
    20,    20,    20,    20,    20,    20,    20,    20,    20,    20,
    20,    20,   157,   157,   157,   157,   157,   157,   157,   157,
   157,   157,   157,   157,   157,   157,   157,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    20,
    95,    95,    95,    95,    95,    95,    95,    95,    95,    95,
    95,    95,    95,    95,   157,    80,    80,    80,    80,    80,
    80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
   166,   166,   166,   166,   166,   166,   166,   166,   166,   166,
   166,   166,   166,   166,   166,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   166,   nil,   nil,   nil,    80,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   166,   214,   214,   214,   214,
   214,   214,   214,   214,   214,   214,   214,   214,   214,   214,
   214,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   214,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   214,   128,   128,   128,   128,   128,   128,   128,   128,
   128,   128,   128,   128,   128,   128,   128,   200,   200,   200,
   200,   200,   200,   200,   200,   200,   200,   200,   200,   200,
   200,   200,   nil,   nil,   nil,   nil,   128,    94,    94,    94,
    94,    94,    94,    94,    94,    94,    94,    94,    94,    94,
   nil,   200,    50,    50,    50,    50,    50,    50,    50,    50,
    50,    50,    50,    50,    50,    50,    50,    96,    96,    96,
    96,    96,    96,    96,    96,    96,    96,    96,    96,    96,
   nil,    50,   175,   175,   175,   175,   175,   175,   175,   175,
   175,   175,   175,   175,   175,   175,   175,    97,    97,    97,
    97,    97,    97,    97,    97,    97,    97,    97,    97,    97,
   nil,   175,    49,    49,    49,    49,    49,    49,    49,    49,
    49,    49,    49,    49,    49,    49,    49,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    49,   174,   174,   174,
   174,   174,   174,   174,   174,   174,   174,   174,   174,   174,
   174,   174,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   174,    46,    46,    46,    46,    46,    46,    46,    46,
    46,    46,    46,    46,    46,    46,    46,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    46,   172,   172,   172,   172,   172,
   172,   172,   172,   172,   172,   172,   172,   172,   172,   172,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   172,   195,   195,
   195,   195,   195,   195,   195,   195,   195,   195,   195,   195,
   195,   195,   195,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   195,   220,   220,   220,   220,   220,   220,   220,   220,   220,
   220,   220,   220,   220,   220,   220,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   220,   110,   110,   110,   110,   110,   110,
   110,   110,   110,   110,   110,   110,   110,   110,   110,   nil,
   110,   113,   113,   113,   113,   113,   113,   113,   113,   113,
   113,   113,   113,   113,   113,   113,   nil,   113,   116,   116,
   116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   nil,   116,   117,   117,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   117,   117,   117,
   182,   182,   182,   182,   182,   182,   182,   182,   182,   182,
   182,   182,   182,   182,   182,    98,    98,    98,    98,    98,
    98,    98,    98,    98,    98,    98,    98,    98,    99,    99,
    99,    99,    99,    99,    99,    99,    99,    99,    99,    99,
    99,   100,   100,   100,   100,   100,   100,   100,   100,   100,
   100,   100,   100,   100,   101,   101,   101,   101,   101,   101,
   101,   101,   101,   101,   101,   101,   101 ]

racc_action_pointer = [
    -4,     3,   -16,   nil,   nil,   -32,   -37,    15,   nil,    -3,
   nil,   -28,   nil,   nil,   -27,    -8,     2,   -13,     7,    21,
   872,    -7,    -4,    10,    13,    14,    16,   nil,   nil,   nil,
    13,   -19,    28,    38,    51,   nil,   nil,   nil,   nil,   nil,
   -40,   nil,    38,    21,    20,   nil,  1177,    30,    40,  1127,
  1067,   nil,    56,    71,    81,    92,   103,   110,   120,   125,
   135,   142,   153,   164,   174,   185,   192,   nil,   nil,   nil,
   nil,   nil,   nil,   197,   207,   nil,   217,   224,   nil,   nil,
   930,    34,   -22,    60,    34,   nil,    44,   nil,   nil,    -9,
   nil,   248,   nil,   nil,  1052,   915,  1082,  1112,  1350,  1363,
  1376,  1389,   nil,   nil,   nil,   nil,   nil,   103,   274,    69,
  1269,   nil,    70,  1286,    47,   nil,  1303,  1320,   nil,    -8,
   nil,    50,    53,   nil,   275,   nil,    47,   306,  1017,   337,
   368,   nil,   nil,   nil,   361,   nil,    71,   411,    93,   nil,
   nil,    97,   nil,   nil,   378,   nil,   nil,   nil,   nil,   438,
   100,    78,    83,   443,    82,   454,   465,   887,    87,    88,
    92,    95,    97,   nil,   470,   nil,   945,   497,   100,   nil,
   nil,   122,  1200,   112,  1152,  1097,   nil,   nil,   nil,   nil,
   nil,   nil,  1335,   528,   487,   nil,   nil,   nil,   555,   nil,
   nil,   560,   nil,   nil,   110,  1223,   587,   113,   618,   645,
  1032,   672,   699,   nil,   nil,   nil,   nil,   nil,   nil,   582,
   nil,   nil,   nil,   726,   981,   757,   nil,   767,   nil,   nil,
  1246,   798,   nil,   nil,   825,   nil ]

racc_action_default = [
   -92,   -92,   -92,    -2,   -34,    -5,   -92,   -92,    -1,   -92,
    -4,   -92,   -91,   226,   -92,   -13,   -92,   -92,   -92,   -92,
   -92,   -92,   -92,   -92,   -92,   -92,   -92,   -33,   -49,   -49,
   -92,   -84,   -92,   -92,   -92,   -82,   -83,   -85,   -89,   -90,
   -92,    -3,   -92,   -92,   -92,   -87,   -92,   -84,   -92,   -92,
   -92,   -26,   -92,   -92,   -92,   -92,   -92,   -92,   -92,   -92,
   -92,   -92,   -92,   -92,   -92,   -92,   -92,   -27,   -28,   -29,
   -30,   -31,   -32,   -92,   -92,   -50,   -92,   -92,   -66,   -80,
   -92,   -92,   -92,   -56,   -92,   -34,   -13,   -53,   -54,   -60,
   -34,   -92,   -34,   -34,   -64,   -65,   -67,   -68,   -69,   -70,
   -71,   -72,   -73,   -74,   -75,   -76,   -77,   -78,   -79,   -43,
   -44,   -88,   -45,   -46,   -92,   -52,   -58,   -61,   -81,   -92,
   -42,   -92,   -92,   -86,   -92,   -12,   -92,   -92,   -92,   -92,
   -92,   -47,   -48,   -51,   -92,   -42,   -92,   -92,   -92,   -55,
   -10,   -60,   -59,   -14,   -92,   -17,   -22,   -34,   -57,   -92,
   -92,   -92,   -13,   -92,   -92,   -92,   -92,   -92,   -92,   -92,
   -92,   -92,   -92,   -41,   -62,   -42,   -92,   -92,   -92,   -42,
    -8,   -92,   -92,   -92,   -92,   -92,   -35,   -36,   -37,   -38,
   -39,   -40,   -63,   -92,   -92,   -34,   -23,    -6,   -92,   -42,
   -42,   -92,   -42,   -42,   -92,   -92,   -92,   -92,   -92,   -92,
   -92,   -92,   -92,    -9,   -34,   -16,    -7,   -11,   -18,   -92,
   -21,   -24,   -42,   -92,   -92,   -92,   -15,   -92,   -42,   -25,
   -92,   -92,   -42,   -20,   -92,   -19 ]

racc_goto_table = [
    11,    42,    81,    31,    84,    87,     3,     1,     8,     2,
     9,    48,    20,   114,    10,    73,    74,   109,   112,    46,
   nil,    49,    50,   nil,    75,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    78,    79,    80,    89,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,    94,    95,    96,    97,    98,
    99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
   nil,   148,   125,   nil,   nil,   nil,   110,   113,   123,   116,
   117,   nil,   nil,    88,   139,   138,    84,   142,   nil,   nil,
   nil,   124,   nil,   nil,   128,   nil,   127,   nil,   129,   130,
   150,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,   nil,
   141,    31,   nil,    31,    31,   nil,   nil,    20,   nil,   nil,
    20,    31,    20,    20,   nil,   nil,   nil,   116,   171,   nil,
   nil,   nil,   nil,    31,   nil,   nil,   nil,   166,   173,   nil,
   nil,   nil,   nil,   167,   nil,   nil,   172,   nil,   174,   175,
   nil,    31,   nil,    21,   nil,   nil,    21,   182,    21,    21,
    20,   nil,   nil,   nil,   137,   nil,   nil,    31,   nil,   nil,
   nil,   nil,    31,   nil,   nil,   nil,   nil,   195,   nil,   149,
    31,   196,    31,    31,   200,    31,    31,   nil,   nil,    20,
   nil,   nil,   nil,   nil,   nil,   nil,    21,    31,   nil,    31,
   213,   nil,   214,   nil,   nil,    31,    20,   nil,    31,   183,
   220,   nil,   nil,   188,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   198,   199,   nil,   201,   202,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   215,   nil,   nil,   nil,
   nil,   nil,   221,   nil,   nil,   nil,   224 ]

racc_goto_check = [
     6,    11,     7,     6,     9,    27,     3,     1,     3,     2,
     4,     6,    15,    26,     2,    23,    23,    24,    24,    15,
   nil,    15,    15,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    15,    15,    15,     6,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,    15,    15,    15,    15,    15,
    15,    15,    15,    15,    15,    15,    15,    15,    15,    15,
   nil,    26,    11,   nil,   nil,   nil,    15,    15,     6,    15,
    15,   nil,   nil,    19,     7,     9,     9,    27,   nil,   nil,
   nil,     4,   nil,   nil,    15,   nil,     4,   nil,     4,     4,
     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,   nil,
     6,     6,   nil,     6,     6,   nil,   nil,    15,   nil,   nil,
    15,     6,    15,    15,   nil,   nil,   nil,    15,    11,   nil,
   nil,   nil,   nil,     6,   nil,   nil,   nil,    15,     6,   nil,
   nil,   nil,   nil,     4,   nil,   nil,    15,   nil,    15,    15,
   nil,     6,   nil,    19,   nil,   nil,    19,    15,    19,    19,
    15,   nil,   nil,   nil,     8,   nil,   nil,     6,   nil,   nil,
   nil,   nil,     6,   nil,   nil,   nil,   nil,    15,   nil,     8,
     6,     4,     6,     6,    15,     6,     6,   nil,   nil,    15,
   nil,   nil,   nil,   nil,   nil,   nil,    19,     6,   nil,     6,
     4,   nil,    15,   nil,   nil,     6,    15,   nil,     6,     8,
    15,   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     8,     8,   nil,     8,     8,   nil,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,   nil,   nil,
   nil,   nil,     8,   nil,   nil,   nil,     8 ]

racc_goto_pointer = [
   nil,     7,     9,     6,     6,   nil,    -6,   -38,    54,   -36,
   nil,   -14,   nil,   nil,   nil,     3,   nil,   nil,   nil,    39,
   nil,   nil,   nil,   -13,   -56,   nil,   -63,   -39,   nil,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     5,    47,   nil,   nil,    44,
    24,   nil,   161,    43,    23,   157,   160,    22,   159,   158,
    25,    26,   162,   nil,   nil,    37,   nil,   nil,    83,    35,
    36 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 53, :_reduce_1,
  1, 53, :_reduce_2,
  4, 55, :_reduce_3,
  2, 54, :_reduce_4,
  1, 54, :_reduce_5,
  9, 57, :_reduce_6,
  11, 57, :_reduce_7,
  8, 57, :_reduce_8,
  10, 57, :_reduce_9,
  5, 62, :_reduce_10,
  5, 64, :_reduce_11,
  3, 63, :_reduce_12,
  0, 63, :_reduce_13,
  5, 66, :_reduce_14,
  11, 66, :_reduce_15,
  9, 66, :_reduce_16,
  5, 66, :_reduce_17,
  5, 68, :_reduce_18,
  11, 68, :_reduce_19,
  9, 68, :_reduce_20,
  5, 68, :_reduce_21,
  5, 69, :_reduce_22,
  7, 69, :_reduce_23,
  5, 70, :_reduce_24,
  7, 70, :_reduce_25,
  3, 56, :_reduce_26,
  3, 56, :_reduce_27,
  3, 56, :_reduce_28,
  3, 56, :_reduce_29,
  3, 56, :_reduce_30,
  3, 56, :_reduce_31,
  3, 56, :_reduce_32,
  2, 56, :_reduce_33,
  0, 56, :_reduce_34,
  3, 60, :_reduce_35,
  3, 60, :_reduce_36,
  3, 60, :_reduce_37,
  3, 60, :_reduce_38,
  3, 60, :_reduce_39,
  3, 60, :_reduce_40,
  2, 60, :_reduce_41,
  0, 60, :_reduce_42,
  3, 73, :_reduce_43,
  3, 73, :_reduce_44,
  3, 73, :_reduce_45,
  3, 73, :_reduce_46,
  3, 75, :_reduce_47,
  3, 75, :_reduce_48,
  0, 75, :_reduce_49,
  2, 72, :_reduce_50,
  4, 77, :_reduce_51,
  3, 77, :_reduce_52,
  2, 65, :_reduce_53,
  2, 65, :_reduce_54,
  3, 59, :_reduce_55,
  1, 59, :_reduce_56,
  3, 78, :_reduce_57,
  1, 78, :_reduce_58,
  3, 79, :_reduce_59,
  1, 79, :_reduce_60,
  3, 71, :_reduce_61,
  1, 74, :_reduce_62,
  2, 74, :_reduce_63,
  3, 67, :_reduce_64,
  3, 67, :_reduce_65,
  2, 67, :_reduce_66,
  3, 67, :_reduce_67,
  3, 67, :_reduce_68,
  3, 67, :_reduce_69,
  3, 67, :_reduce_70,
  3, 67, :_reduce_71,
  3, 67, :_reduce_72,
  3, 67, :_reduce_73,
  3, 67, :_reduce_74,
  3, 67, :_reduce_75,
  3, 67, :_reduce_76,
  3, 67, :_reduce_77,
  3, 67, :_reduce_78,
  3, 67, :_reduce_79,
  2, 67, :_reduce_80,
  3, 67, :_reduce_81,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  2, 80, :_reduce_86,
  1, 61, :_reduce_87,
  1, 76, :_reduce_88,
  1, 81, :_reduce_89,
  1, 82, :_reduce_90,
  1, 58, :_reduce_91 ]

racc_reduce_n = 92

racc_shift_n = 226

racc_token_table = {
  false => 0,
  :error => 1,
  :PRNTS => 2,
  :NOT => 3,
  :UMINUS => 4,
  :MULT => 5,
  :DIV => 6,
  :INTDIV => 7,
  :MOD => 8,
  :INTMOD => 9,
  :PLUS => 10,
  :MINUS => 11,
  :EQOP => 12,
  :INEQOP => 13,
  :GTOP => 14,
  :GEOP => 15,
  :LTOP => 16,
  :LEOP => 17,
  :AND => 18,
  :OR => 19,
  :ASSIGNOP => 20,
  :COLON => 21,
  :SEMICOLON => 22,
  :PROGRAM => 23,
  :BEGINBLK => 24,
  :ENDBLK => 25,
  :WITH => 26,
  :DO => 27,
  :REPEAT => 28,
  :TIMES => 29,
  :READ => 30,
  :WRITE => 31,
  :WRITELN => 32,
  :IF => 33,
  :THEN => 34,
  :ELSE => 35,
  :WHILE => 36,
  :FOR => 37,
  :FROM => 38,
  :TO => 39,
  :BY => 40,
  :FUNC => 41,
  :RETURN => 42,
  :RETURNTYPE => 43,
  :TYPE => 44,
  :LPARENTH => 45,
  :RPARENTH => 46,
  :SEP => 47,
  :BOOLEAN => 48,
  :NUMBER => 49,
  :STRING => 50,
  :IDENTIFIER => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PRNTS",
  "NOT",
  "UMINUS",
  "MULT",
  "DIV",
  "INTDIV",
  "MOD",
  "INTMOD",
  "PLUS",
  "MINUS",
  "EQOP",
  "INEQOP",
  "GTOP",
  "GEOP",
  "LTOP",
  "LEOP",
  "AND",
  "OR",
  "ASSIGNOP",
  "COLON",
  "SEMICOLON",
  "PROGRAM",
  "BEGINBLK",
  "ENDBLK",
  "WITH",
  "DO",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURNTYPE",
  "TYPE",
  "LPARENTH",
  "RPARENTH",
  "SEP",
  "BOOLEAN",
  "NUMBER",
  "STRING",
  "IDENTIFIER",
  "$start",
  "S",
  "defblk",
  "programblk",
  "instr",
  "funcdef",
  "ident",
  "paramlist",
  "funcinstr",
  "datatype",
  "withblk",
  "declblk",
  "funcwithblk",
  "decl",
  "iter",
  "expr",
  "funciter",
  "cond",
  "funccond",
  "assign",
  "readblk",
  "writeblk",
  "returnblk",
  "writelist",
  "str",
  "callfunc",
  "arglist",
  "identlist",
  "param",
  "b",
  "n" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 24)
  def _reduce_1(val, _values, result)
    result = S_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 25)
  def _reduce_2(val, _values, result)
    result = S_node.new(nil,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 29)
  def _reduce_3(val, _values, result)
    result = Programblk_node.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 33)
  def _reduce_4(val, _values, result)
    result = Defblk_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 34)
  def _reduce_5(val, _values, result)
    result = Defblk_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 38)
  def _reduce_6(val, _values, result)
    result = Funcdef_node.new(val[1],val[3],Type_node.new(nil),val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 39)
  def _reduce_7(val, _values, result)
    result = Funcdef_node.new(val[1],val[3],val[6],val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 40)
  def _reduce_8(val, _values, result)
    result = Funcdef_node.new(val[1],nil,Type_node.new(nil),val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 41)
  def _reduce_9(val, _values, result)
    result = Funcdef_node.new(val[1],nil,val[5],val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 45)
  def _reduce_10(val, _values, result)
    result = Withblk_node.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 49)
  def _reduce_11(val, _values, result)
    result = Withblk_node.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 53)
  def _reduce_12(val, _values, result)
    result = Declist_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 54)
  def _reduce_13(val, _values, result)
    result = Declist_node.new(nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 58)
  def _reduce_14(val, _values, result)
    result = While_loop_node.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 59)
  def _reduce_15(val, _values, result)
    result = For_loop_node.new(val[1],val[3],val[5],val[7],val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 60)
  def _reduce_16(val, _values, result)
    result = For_loop_const_node.new(val[1],val[3],val[5],val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 61)
  def _reduce_17(val, _values, result)
    result = Repeat_loop_node.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 65)
  def _reduce_18(val, _values, result)
    result = While_loop_node.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 66)
  def _reduce_19(val, _values, result)
    result = For_loop_node.new(val[1],val[3],val[5],val[7],val[9])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 67)
  def _reduce_20(val, _values, result)
    result = For_loop_const_node.new(val[1],val[3],val[5],val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 68)
  def _reduce_21(val, _values, result)
    result = Repeat_loop_node.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 72)
  def _reduce_22(val, _values, result)
    result = If_node.new(val[1],val[3],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 73)
  def _reduce_23(val, _values, result)
    result = If_node.new(val[1],val[3],val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 77)
  def _reduce_24(val, _values, result)
    result = If_node.new(val[1],val[3],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 78)
  def _reduce_25(val, _values, result)
    result = If_node.new(val[1],val[3],val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 82)
  def _reduce_26(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 83)
  def _reduce_27(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 84)
  def _reduce_28(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 85)
  def _reduce_29(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 86)
  def _reduce_30(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 87)
  def _reduce_31(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 88)
  def _reduce_32(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_33(val, _values, result)
    result = Instrlist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_34(val, _values, result)
    result = Instrlist_node.new(nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 94)
  def _reduce_35(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 95)
  def _reduce_36(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 96)
  def _reduce_37(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_38(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_39(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 99)
  def _reduce_40(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 100)
  def _reduce_41(val, _values, result)
    result = Instrlist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_42(val, _values, result)
    result = Instrlist_node.new(nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 105)
  def _reduce_43(val, _values, result)
    result = Write_node.new(val[1],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_44(val, _values, result)
    result = Write_node.new(val[1],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_45(val, _values, result)
    result = Write_node.new(val[1],val[2],true)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_46(val, _values, result)
    result = Write_node.new(val[1],val[2],true)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_47(val, _values, result)
    result = Writelist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_48(val, _values, result)
    result = Writelist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_49(val, _values, result)
    result = Writelist_node.new(nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_50(val, _values, result)
    result = Read_node.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_51(val, _values, result)
    result = Callfunc_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_52(val, _values, result)
    result = Callfunc_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_53(val, _values, result)
    result = Decl_node.new(val[0],nil,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_54(val, _values, result)
    result = Decl_node.new(val[0],val[1],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_55(val, _values, result)
    result = Paramlist_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_56(val, _values, result)
    result = Paramlist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_57(val, _values, result)
    result = Arglist_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_58(val, _values, result)
    result = Arglist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_59(val, _values, result)
    result = Identlist_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_60(val, _values, result)
    result = Identlist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_61(val, _values, result)
    result = Assignop_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_62(val, _values, result)
    result = Return_node.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_63(val, _values, result)
    result = Return_node.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_64(val, _values, result)
    result = Logical_bin_expr_node.new(val[0],val[2],'CONJUNCTION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_65(val, _values, result)
    result = Logical_bin_expr_node.new(val[0],val[2],'DISJUNCTION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 158)
  def _reduce_66(val, _values, result)
    result = Logical_un_expr_node.new(val[1],'LOGICAL NEGATION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 159)
  def _reduce_67(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'EQUALITY')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 160)
  def _reduce_68(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'INEQUALITY')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 161)
  def _reduce_69(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'GREATHER THAN')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 162)
  def _reduce_70(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'GREATHER THAN OR EQUAL')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 163)
  def _reduce_71(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'LESS THAN')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 164)
  def _reduce_72(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'LESS THAN OR EQUAL')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_73(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'MULTIPLICATION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 166)
  def _reduce_74(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'EXACT DIVISION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 167)
  def _reduce_75(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'INTEGER DIVISION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 168)
  def _reduce_76(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'EXACT MODULO')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 169)
  def _reduce_77(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'INTEGER MODULO')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 170)
  def _reduce_78(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'ADDITION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 171)
  def _reduce_79(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'SUBTRACTION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 172)
  def _reduce_80(val, _values, result)
    result = Arith_un_expr_node.new(val[1],'ARITHMETIC NEGATION')
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 173)
  def _reduce_81(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

module_eval(<<'.,.,', 'retina_parser.y', 181)
  def _reduce_86(val, _values, result)
    result = Param_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 185)
  def _reduce_87(val, _values, result)
    result = Type_node.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 189)
  def _reduce_88(val, _values, result)
    result = String_node.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 193)
  def _reduce_89(val, _values, result)
    result = Boolean_node.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 197)
  def _reduce_90(val, _values, result)
    result = Number_node.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 201)
  def _reduce_91(val, _values, result)
    result = Identifier_node.new(val[0])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
