#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer.rb"
require_relative "retina_ast.rb"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        puts "SYNTACTIC ERROR FOUND:"
        if @token.eql? "$" then
            "Unexpected EOF"
        else
            "Line #{@token.line}, column #{@token.column}: unexpected token #{@token.symbol}: #{@token.value}"   
        end
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 274)

def initialize(lexer)
    @lexer = lexer
end

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def next_token
    if @lexer.has_next_token then
        token = @lexer.next_token;
        return [token.symbol,token]
    else
        return nil
    end
end

def parse
    do_parse
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    32,    76,     7,    77,    32,     4,     4,    45,    33,    82,
   120,     6,    33,    32,   135,    77,    12,   126,    13,    14,
    15,    33,    18,     6,    30,    28,    29,    19,    32,   121,
    16,    17,    32,   136,    40,    41,    33,    45,    12,    34,
    33,    67,    27,    34,    38,    39,    32,    12,    38,    39,
    68,    12,    34,    32,    33,    69,    70,    38,    39,    71,
    12,    33,    32,    72,    12,    85,    32,    34,    86,    12,
    33,    34,    38,    39,    33,    12,    38,    39,    32,    12,
    60,    61,    62,    63,    64,    34,    33,    32,    76,    91,
    38,    39,    34,    12,    32,    33,   119,    38,    39,   122,
    12,    34,    33,    12,    32,    34,    38,    39,    32,    12,
    38,    39,    33,    12,    45,   131,    33,    34,   131,    32,
   133,    45,    38,    39,    45,    12,    34,    33,    32,    12,
    45,    38,    39,    34,    12,   167,    33,    32,    38,    39,
   126,    12,   171,    34,   172,    33,    32,    34,    38,    39,
    45,    12,    38,    39,    33,    12,    12,    32,    34,   179,
   180,    32,   181,    38,    39,    33,    12,    34,   182,    33,
    32,   183,    38,    39,   184,    12,    34,   185,    33,    32,
   191,    38,    39,   193,    12,    34,    32,    33,   195,   207,
    38,    39,   210,    12,    33,    32,    34,   nil,   nil,    32,
    34,    38,    39,    33,    12,    38,    39,    33,    12,    34,
   nil,    32,   nil,   nil,    38,    39,   nil,    12,    34,    33,
    32,   nil,   nil,    38,    39,    34,    12,   nil,    33,   nil,
    38,    39,   111,    12,    34,   nil,   nil,   nil,    34,    38,
    39,   111,    12,    38,    39,    32,    12,   nil,   nil,    32,
    34,   115,   nil,    33,   nil,    38,    39,    33,    12,    34,
   nil,   nil,   nil,   nil,    38,    39,   nil,    12,   140,    15,
   nil,    18,   nil,    30,    28,    29,    19,   nil,    32,    16,
    17,   nil,   nil,   nil,    34,   nil,    33,   nil,    34,    38,
    39,    27,    12,    38,    39,   nil,    12,   143,    15,   nil,
    18,   nil,    30,    28,    29,    19,   nil,    32,    16,    17,
    60,    61,    62,    63,    64,    33,   nil,    34,   nil,   nil,
    27,   nil,    38,    39,   nil,    12,   145,    15,   nil,    18,
   nil,    30,    28,    29,    19,   nil,    32,    16,    17,   nil,
   nil,   nil,   nil,   nil,    33,   nil,    34,   nil,   nil,    27,
   nil,    38,    39,   nil,    12,   146,    15,   nil,    18,   nil,
    30,    28,    29,    19,    32,   147,    16,    17,    32,   nil,
   nil,   nil,    33,   nil,   nil,    34,    33,   nil,    27,   nil,
    38,    39,   nil,    12,   nil,   nil,   nil,   151,   152,   nil,
   155,   nil,    30,    28,    29,   156,   nil,    32,   153,   154,
   nil,   nil,   nil,    34,   166,    33,    32,    34,    38,    39,
   165,    12,    38,    39,    33,    12,   170,   152,    32,   155,
   nil,    30,    28,    29,   156,   nil,    33,   153,   154,    32,
   nil,   nil,   nil,   166,   nil,   nil,    34,    33,    32,   165,
   nil,    38,    39,   nil,    12,    34,    33,   nil,   nil,   nil,
    38,    39,   nil,    12,   nil,   nil,    32,    34,   nil,   nil,
   nil,   nil,    38,    39,    33,    12,   nil,    32,    34,   nil,
   nil,   nil,   nil,    38,    39,    33,    12,    34,   nil,   nil,
   nil,   nil,    38,    39,   nil,    12,   190,    15,   nil,    18,
   nil,    30,    28,    29,    19,    34,    32,    16,    17,   nil,
    38,    39,   nil,    12,    33,   nil,    34,   nil,   nil,    27,
   nil,    38,    39,   nil,    12,   198,   152,   nil,   155,   nil,
    30,    28,    29,   156,   nil,    32,   153,   154,   nil,    32,
   nil,   nil,   166,    33,   nil,    34,   nil,    33,   165,   nil,
    38,    39,   nil,    12,   201,   152,   nil,   155,   nil,    30,
    28,    29,   156,   nil,    32,   153,   154,   nil,    32,   nil,
   nil,   166,    33,   nil,    34,   nil,    33,   165,    34,    38,
    39,   nil,    12,    38,    39,   nil,    12,   209,    15,   nil,
    18,   nil,    30,    28,    29,    19,   nil,    32,    16,    17,
   nil,   nil,   nil,    34,   nil,    33,   nil,    34,    38,    39,
    27,    12,    38,    39,   nil,    12,   211,   152,   nil,   155,
   nil,    30,    28,    29,   156,   nil,    32,   153,   154,   nil,
   nil,   nil,   nil,   166,    33,   nil,    34,   nil,   nil,   165,
   nil,    38,    39,   nil,    12,   212,   152,   nil,   155,   nil,
    30,    28,    29,   156,   nil,    32,   153,   154,   nil,   nil,
   nil,   nil,   166,    33,   nil,    34,   nil,   nil,   165,   nil,
    38,    39,   nil,    12,   214,   152,   nil,   155,   nil,    30,
    28,    29,   156,   nil,    32,   153,   154,   nil,   nil,   nil,
   nil,   166,    33,   nil,    34,   nil,   nil,   165,   nil,    38,
    39,   nil,    12,   215,   152,   nil,   155,   nil,    30,    28,
    29,   156,   nil,   216,   153,   154,    32,   nil,   nil,   nil,
   166,   nil,   nil,    34,    33,   nil,   165,   nil,    38,    39,
   nil,    12,   nil,   nil,   nil,   220,    15,   nil,    18,   nil,
    30,    28,    29,    19,   nil,    32,    16,    17,   nil,    32,
   nil,   nil,   nil,    33,   nil,    34,   nil,    33,    27,   nil,
    38,    39,   nil,    12,   223,   152,   nil,   155,   nil,    30,
    28,    29,   156,   nil,   nil,   153,   154,   nil,    32,   nil,
   nil,   166,   nil,   nil,    34,   nil,    33,   165,    34,    38,
    39,   nil,    12,    38,    39,   nil,    12,   227,   152,   nil,
   155,   nil,    30,    28,    29,   156,   nil,    32,   153,   154,
   nil,   nil,   nil,   nil,   166,    33,   nil,    34,   nil,   nil,
   165,   nil,    38,    39,   nil,    12,   229,   152,   nil,   155,
   nil,    30,    28,    29,   156,   nil,   nil,   153,   154,   nil,
   nil,   nil,   nil,   166,   nil,   nil,    34,   nil,   nil,   165,
   nil,    38,    39,   nil,    12,    60,    61,    62,    63,    64,
    65,    66,    54,    55,    56,    57,    58,    59,    52,    53,
    60,    61,    62,    63,    64,    65,    66,    54,    55,    56,
    57,    58,    59,    52,    53,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   132,    60,    61,    62,
    63,    64,    65,    66,    54,    55,    56,    57,    58,    59,
    52,   132,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,    60,    61,    62,
    63,    64,    65,    66,    54,    55,    56,    57,    58,    59,
    52,    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   134,    60,    61,    62,    63,    64,    65,
    66,    54,    55,    56,    57,    58,    59,    51,    60,    61,
    62,    63,    64,    65,    66,    54,    55,    56,    57,    58,
    59,    52,    53,    60,    61,    62,    63,    64,    65,    66,
    54,    55,    56,    57,    58,    59,    52,    53,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   178,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   118,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,   nil,   nil,   nil,
   nil,   189,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   188,    60,    61,    62,    63,    64,
    65,    66,    54,    55,    56,    57,    58,    59,    52,    53,
   nil,   nil,   nil,   nil,   222,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   221,    60,    61,
    62,    63,    64,    65,    66,    54,    55,    56,    57,    58,
    59,    52,    53,    60,    61,    62,    63,    64,    65,    66,
    54,    55,    56,    57,    58,    59,    52,    53,   nil,   144,
    60,    61,    62,    63,    64,    65,    66,   -94,   -94,   -94,
   -94,   -94,   -94,   nil,   213,    60,    61,    62,    63,    64,
    65,    66,    54,    55,    56,    57,    58,    59,    52,    53,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    93,    60,    61,    62,    63,    64,    65,    66,    54,
    55,    56,    57,    58,    59,    52,    53,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   197,    60,
    61,    62,    63,    64,    65,    66,    54,    55,    56,    57,
    58,    59,    52,    53,   nil,   nil,   nil,   nil,   nil,   nil,
    92,    60,    61,    62,    63,    64,    65,    66,    54,    55,
    56,    57,    58,    59,    52,    53,   nil,   nil,   nil,   nil,
   nil,   nil,   196,    60,    61,    62,    63,    64,    65,    66,
    54,    55,    56,    57,    58,    59,    52,    53,   nil,   nil,
   nil,   nil,    90,    60,    61,    62,    63,    64,    65,    66,
    54,    55,    56,    57,    58,    59,    52,    53,   nil,   nil,
   nil,   nil,   194,    60,    61,    62,    63,    64,    65,    66,
    54,    55,    56,    57,    58,    59,    52,    53,   nil,   nil,
   nil,   nil,   208,    60,    61,    62,    63,    64,    65,    66,
    54,    55,    56,    57,    58,    59,    52,    53,   nil,   nil,
   nil,   nil,   226,    60,    61,    62,    63,    64,    65,    66,
    54,    55,    56,    57,    58,    59,    52,    53,    60,    61,
    62,    63,    64,    65,    66,    54,    55,    56,    57,    58,
    59,    52,    53,    60,    61,    62,    63,    64,    65,    66,
   -94,   -94,   -94,   -94,   -94,   -94,    60,    61,    62,    63,
    64,    65,    66,   -94,   -94,   -94,   -94,   -94,   -94,    60,
    61,    62,    63,    64,    65,    66,   -94,   -94,   -94,   -94,
   -94,   -94,    60,    61,    62,    63,    64,    65,    66,   -94,
   -94,   -94,   -94,   -94,   -94,    60,    61,    62,    63,    64,
    65,    66,   -94,   -94,   -94,   -94,   -94,   -94 ]

racc_action_check = [
     9,    31,     1,    31,    16,     0,     2,    40,     9,    40,
    82,     5,    16,    18,   119,    89,     6,    89,     7,     9,
     9,    18,     9,     0,     9,     9,     9,     9,    19,    82,
     9,     9,    32,   119,    11,    14,    19,    15,    17,     9,
    32,    21,     9,    16,     9,     9,    33,     9,    16,    16,
    22,    16,    18,    34,    33,    23,    24,    18,    18,    25,
    18,    34,    52,    26,    30,    42,    53,    19,    43,    44,
    52,    32,    19,    19,    53,    19,    32,    32,    54,    32,
   107,   107,   107,   107,   107,    33,    54,    55,    47,    48,
    33,    33,    34,    33,    56,    55,    81,    34,    34,    83,
    34,    52,    56,    84,    57,    53,    52,    52,    58,    52,
    53,    53,    57,    53,    86,   109,    58,    54,   112,    59,
   114,   121,    54,    54,   122,    54,    55,    59,    60,   126,
   136,    55,    55,    56,    55,   138,    60,    61,    56,    56,
   141,    56,   150,    57,   151,    61,    62,    58,    57,    57,
   152,    57,    58,    58,    62,    58,   154,    63,    59,   158,
   159,    64,   160,    59,    59,    63,    59,    60,   161,    64,
    65,   162,    60,    60,   163,    60,    61,   164,    65,    66,
   170,    61,    61,   173,    61,    62,    73,    66,   175,   198,
    62,    62,   201,    62,    73,    74,    63,   nil,   nil,    77,
    64,    63,    63,    74,    63,    64,    64,    77,    64,    65,
   nil,    76,   nil,   nil,    65,    65,   nil,    65,    66,    76,
    91,   nil,   nil,    66,    66,    73,    66,   nil,    91,   nil,
    73,    73,    73,    73,    74,   nil,   nil,   nil,    77,    74,
    74,    74,    74,    77,    77,   134,    77,   nil,   nil,   124,
    76,    76,   nil,   134,   nil,    76,    76,   124,    76,    91,
   nil,   nil,   nil,   nil,    91,    91,   nil,    91,   124,   124,
   nil,   124,   nil,   124,   124,   124,   124,   nil,   127,   124,
   124,   nil,   nil,   nil,   134,   nil,   127,   nil,   124,   134,
   134,   124,   134,   124,   124,   nil,   124,   127,   127,   nil,
   127,   nil,   127,   127,   127,   127,   nil,   129,   127,   127,
   108,   108,   108,   108,   108,   129,   nil,   127,   nil,   nil,
   127,   nil,   127,   127,   nil,   127,   129,   129,   nil,   129,
   nil,   129,   129,   129,   129,   nil,   130,   129,   129,   nil,
   nil,   nil,   nil,   nil,   130,   nil,   129,   nil,   nil,   129,
   nil,   129,   129,   nil,   129,   130,   130,   nil,   130,   nil,
   130,   130,   130,   130,   144,   130,   130,   130,   137,   nil,
   nil,   nil,   144,   nil,   nil,   130,   137,   nil,   130,   nil,
   130,   130,   nil,   130,   nil,   nil,   nil,   137,   137,   nil,
   137,   nil,   137,   137,   137,   137,   nil,   149,   137,   137,
   nil,   nil,   nil,   144,   137,   149,   153,   137,   144,   144,
   137,   144,   137,   137,   153,   137,   149,   149,   155,   149,
   nil,   149,   149,   149,   149,   nil,   155,   149,   149,   156,
   nil,   nil,   nil,   149,   nil,   nil,   149,   156,   166,   149,
   nil,   149,   149,   nil,   149,   153,   166,   nil,   nil,   nil,
   153,   153,   nil,   153,   nil,   nil,   188,   155,   nil,   nil,
   nil,   nil,   155,   155,   188,   155,   nil,   169,   156,   nil,
   nil,   nil,   nil,   156,   156,   169,   156,   166,   nil,   nil,
   nil,   nil,   166,   166,   nil,   166,   169,   169,   nil,   169,
   nil,   169,   169,   169,   169,   188,   187,   169,   169,   nil,
   188,   188,   nil,   188,   187,   nil,   169,   nil,   nil,   169,
   nil,   169,   169,   nil,   169,   187,   187,   nil,   187,   nil,
   187,   187,   187,   187,   nil,   192,   187,   187,   nil,   195,
   nil,   nil,   187,   192,   nil,   187,   nil,   195,   187,   nil,
   187,   187,   nil,   187,   192,   192,   nil,   192,   nil,   192,
   192,   192,   192,   nil,   213,   192,   192,   nil,   200,   nil,
   nil,   192,   213,   nil,   192,   nil,   200,   192,   195,   192,
   192,   nil,   192,   195,   195,   nil,   195,   200,   200,   nil,
   200,   nil,   200,   200,   200,   200,   nil,   202,   200,   200,
   nil,   nil,   nil,   213,   nil,   202,   nil,   200,   213,   213,
   200,   213,   200,   200,   nil,   200,   202,   202,   nil,   202,
   nil,   202,   202,   202,   202,   nil,   203,   202,   202,   nil,
   nil,   nil,   nil,   202,   203,   nil,   202,   nil,   nil,   202,
   nil,   202,   202,   nil,   202,   203,   203,   nil,   203,   nil,
   203,   203,   203,   203,   nil,   205,   203,   203,   nil,   nil,
   nil,   nil,   203,   205,   nil,   203,   nil,   nil,   203,   nil,
   203,   203,   nil,   203,   205,   205,   nil,   205,   nil,   205,
   205,   205,   205,   nil,   206,   205,   205,   nil,   nil,   nil,
   nil,   205,   206,   nil,   205,   nil,   nil,   205,   nil,   205,
   205,   nil,   205,   206,   206,   nil,   206,   nil,   206,   206,
   206,   206,   nil,   206,   206,   206,   217,   nil,   nil,   nil,
   206,   nil,   nil,   206,   217,   nil,   206,   nil,   206,   206,
   nil,   206,   nil,   nil,   nil,   217,   217,   nil,   217,   nil,
   217,   217,   217,   217,   nil,   219,   217,   217,   nil,   221,
   nil,   nil,   nil,   219,   nil,   217,   nil,   221,   217,   nil,
   217,   217,   nil,   217,   219,   219,   nil,   219,   nil,   219,
   219,   219,   219,   nil,   nil,   219,   219,   nil,   225,   nil,
   nil,   219,   nil,   nil,   219,   nil,   225,   219,   221,   219,
   219,   nil,   219,   221,   221,   nil,   221,   225,   225,   nil,
   225,   nil,   225,   225,   225,   225,   nil,   228,   225,   225,
   nil,   nil,   nil,   nil,   225,   228,   nil,   225,   nil,   nil,
   225,   nil,   225,   225,   nil,   225,   228,   228,   nil,   228,
   nil,   228,   228,   228,   228,   nil,   nil,   228,   228,   nil,
   nil,   nil,   nil,   228,   nil,   nil,   228,   nil,   nil,   228,
   nil,   228,   228,   nil,   228,   110,   110,   110,   110,   110,
   110,   110,   110,   110,   110,   110,   110,   110,   110,   110,
   113,   113,   113,   113,   113,   113,   113,   113,   113,   113,
   113,   113,   113,   113,   113,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   110,    95,    95,    95,
    95,    95,    95,    95,    95,    95,    95,    95,    95,    95,
    95,   113,   116,   116,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   116,   116,   116,   116,    20,    20,    20,
    20,    20,    20,    20,    20,    20,    20,    20,    20,    20,
    20,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   116,    94,    94,    94,    94,    94,    94,
    94,    94,    94,    94,    94,    94,    94,    20,   157,   157,
   157,   157,   157,   157,   157,   157,   157,   157,   157,   157,
   157,   157,   157,    80,    80,    80,    80,    80,    80,    80,
    80,    80,    80,    80,    80,    80,    80,    80,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   157,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    80,   168,   168,   168,   168,   168,   168,   168,   168,
   168,   168,   168,   168,   168,   168,   168,   nil,   nil,   nil,
   nil,   168,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   168,   218,   218,   218,   218,   218,
   218,   218,   218,   218,   218,   218,   218,   218,   218,   218,
   nil,   nil,   nil,   nil,   218,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   218,   128,   128,
   128,   128,   128,   128,   128,   128,   128,   128,   128,   128,
   128,   128,   128,   204,   204,   204,   204,   204,   204,   204,
   204,   204,   204,   204,   204,   204,   204,   204,   nil,   128,
    96,    96,    96,    96,    96,    96,    96,    96,    96,    96,
    96,    96,    96,   nil,   204,    50,    50,    50,    50,    50,
    50,    50,    50,    50,    50,    50,    50,    50,    50,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    50,   177,   177,   177,   177,   177,   177,   177,   177,
   177,   177,   177,   177,   177,   177,   177,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   177,    49,
    49,    49,    49,    49,    49,    49,    49,    49,    49,    49,
    49,    49,    49,    49,   nil,   nil,   nil,   nil,   nil,   nil,
    49,   176,   176,   176,   176,   176,   176,   176,   176,   176,
   176,   176,   176,   176,   176,   176,   nil,   nil,   nil,   nil,
   nil,   nil,   176,    46,    46,    46,    46,    46,    46,    46,
    46,    46,    46,    46,    46,    46,    46,    46,   nil,   nil,
   nil,   nil,    46,   174,   174,   174,   174,   174,   174,   174,
   174,   174,   174,   174,   174,   174,   174,   174,   nil,   nil,
   nil,   nil,   174,   199,   199,   199,   199,   199,   199,   199,
   199,   199,   199,   199,   199,   199,   199,   199,   nil,   nil,
   nil,   nil,   199,   224,   224,   224,   224,   224,   224,   224,
   224,   224,   224,   224,   224,   224,   224,   224,   nil,   nil,
   nil,   nil,   224,   117,   117,   117,   117,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   117,   186,   186,
   186,   186,   186,   186,   186,   186,   186,   186,   186,   186,
   186,   186,   186,    97,    97,    97,    97,    97,    97,    97,
    97,    97,    97,    97,    97,    97,    98,    98,    98,    98,
    98,    98,    98,    98,    98,    98,    98,    98,    98,    99,
    99,    99,    99,    99,    99,    99,    99,    99,    99,    99,
    99,    99,   100,   100,   100,   100,   100,   100,   100,   100,
   100,   100,   100,   100,   100,   101,   101,   101,   101,   101,
   101,   101,   101,   101,   101,   101,   101,   101 ]

racc_action_pointer = [
   -15,     2,   -14,   nil,   nil,   -27,   -34,    18,   nil,    -3,
   nil,    -8,   nil,   nil,   -10,    -4,     1,   -12,    10,    25,
   912,    -4,     5,    10,    11,    14,    18,   nil,   nil,   nil,
    14,   -41,    29,    43,    50,   nil,   nil,   nil,   nil,   nil,
   -34,   nil,    41,    23,    19,   nil,  1218,    46,    54,  1174,
  1120,   nil,    59,    63,    75,    84,    91,   101,   105,   116,
   125,   134,   143,   154,   158,   167,   176,   nil,   nil,   nil,
   nil,   nil,   nil,   183,   192,   nil,   208,   196,   nil,   nil,
   968,    53,   -11,    53,    53,   nil,    73,   nil,   nil,   -29,
   nil,   217,   nil,   nil,   939,   882,  1105,  1328,  1341,  1354,
  1367,  1380,   nil,   nil,   nil,   nil,   nil,    75,   305,    69,
   840,   nil,    72,   855,    77,   nil,   897,  1298,   nil,    -7,
   nil,    80,    83,   nil,   246,   nil,    79,   275,  1073,   304,
   333,   nil,   nil,   nil,   242,   nil,    89,   365,   114,   nil,
   nil,    94,   nil,   nil,   361,   nil,   nil,   nil,   nil,   394,
   121,    99,   109,   403,   106,   415,   426,   953,   114,   115,
   117,   123,   126,   129,   132,   nil,   435,   nil,  1007,   464,
   135,   nil,   nil,   159,  1238,   153,  1196,  1147,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1313,   493,   453,   nil,
   nil,   nil,   522,   nil,   nil,   526,   nil,   nil,   144,  1258,
   555,   147,   584,   613,  1088,   642,   671,   nil,   nil,   nil,
   nil,   nil,   nil,   551,   nil,   nil,   nil,   703,  1040,   732,
   nil,   736,   nil,   nil,  1278,   765,   nil,   nil,   794,   nil ]

racc_action_default = [
   -94,   -94,   -94,    -2,   -34,    -5,   -94,   -94,    -1,   -94,
    -4,   -94,   -93,   230,   -94,   -13,   -94,   -94,   -94,   -94,
   -94,   -94,   -94,   -94,   -94,   -94,   -94,   -33,   -51,   -51,
   -94,   -86,   -94,   -94,   -94,   -84,   -85,   -87,   -91,   -92,
   -94,    -3,   -94,   -94,   -94,   -89,   -94,   -86,   -94,   -94,
   -94,   -26,   -94,   -94,   -94,   -94,   -94,   -94,   -94,   -94,
   -94,   -94,   -94,   -94,   -94,   -94,   -94,   -27,   -28,   -29,
   -30,   -31,   -32,   -94,   -94,   -52,   -94,   -94,   -68,   -82,
   -94,   -94,   -94,   -58,   -94,   -34,   -13,   -55,   -56,   -62,
   -34,   -94,   -34,   -34,   -66,   -67,   -69,   -70,   -71,   -72,
   -73,   -74,   -75,   -76,   -77,   -78,   -79,   -80,   -81,   -45,
   -46,   -90,   -47,   -48,   -94,   -54,   -60,   -63,   -83,   -94,
   -44,   -94,   -94,   -88,   -94,   -12,   -94,   -94,   -94,   -94,
   -94,   -49,   -50,   -53,   -94,   -44,   -94,   -94,   -94,   -57,
   -10,   -62,   -61,   -14,   -94,   -17,   -22,   -34,   -59,   -94,
   -94,   -94,   -13,   -94,   -94,   -94,   -94,   -94,   -94,   -94,
   -94,   -94,   -94,   -94,   -94,   -43,   -64,   -44,   -94,   -94,
   -94,   -44,    -8,   -94,   -94,   -94,   -94,   -94,   -35,   -36,
   -37,   -38,   -39,   -40,   -41,   -42,   -65,   -94,   -94,   -34,
   -23,    -6,   -94,   -44,   -44,   -94,   -44,   -44,   -94,   -94,
   -94,   -94,   -94,   -94,   -94,   -94,   -94,    -9,   -34,   -16,
    -7,   -11,   -18,   -94,   -21,   -24,   -44,   -94,   -94,   -94,
   -15,   -94,   -44,   -25,   -94,   -94,   -44,   -20,   -94,   -19 ]

racc_goto_table = [
    11,    84,    42,    31,     2,    81,    87,    73,    74,    10,
     9,    48,    20,   114,     3,     1,     8,   109,   112,    46,
   nil,    49,    50,   nil,    75,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    78,    79,    80,    89,   137,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
    25,   nil,   nil,   nil,   149,    94,    95,    96,    97,    98,
    99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
   nil,   148,    26,   125,   nil,   nil,   110,   113,   123,   116,
   117,    88,   138,    84,   nil,   nil,   187,   139,   142,   nil,
   192,   124,   nil,   nil,   128,   nil,   127,   150,   129,   130,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   202,   203,   nil,   205,   206,   nil,    31,   nil,
   141,    31,   nil,    31,    31,   nil,   nil,    20,   nil,   nil,
    20,    31,    20,    20,   nil,   219,   nil,   116,   nil,   173,
   nil,   225,   nil,    31,   nil,   228,   nil,   168,   175,   nil,
   nil,   nil,   nil,   169,   nil,   nil,   174,   nil,   176,   177,
   nil,    21,   nil,    31,    21,    25,    21,    21,    25,   186,
    25,    25,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    31,   nil,   nil,   nil,   nil,    31,    26,   nil,   nil,
    26,   199,    26,    26,    31,   200,    31,    31,   204,    31,
    31,   nil,   nil,    20,   nil,   nil,    21,   nil,   nil,   nil,
    25,    31,   nil,    31,   217,   nil,   218,   nil,   nil,    31,
    20,   nil,    31,   nil,   224,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    26,   nil,   nil,   nil,   nil,    21,   nil,   nil,
   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,    25,   nil,
   nil,   nil,   nil,    26,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    26 ]

racc_goto_check = [
     6,     9,    11,     6,     2,     7,    27,    23,    23,     2,
     4,     6,    15,    26,     3,     1,     3,    24,    24,    15,
   nil,    15,    15,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    15,    15,    15,     6,     8,
   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,
    20,   nil,   nil,   nil,     8,    15,    15,    15,    15,    15,
    15,    15,    15,    15,    15,    15,    15,    15,    15,    15,
   nil,    26,    21,    11,   nil,   nil,    15,    15,     6,    15,
    15,    19,     9,     9,   nil,   nil,     8,     7,    27,   nil,
     8,     4,   nil,   nil,    15,   nil,     4,     9,     4,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     8,     8,   nil,     8,     8,   nil,     6,   nil,
     6,     6,   nil,     6,     6,   nil,   nil,    15,   nil,   nil,
    15,     6,    15,    15,   nil,     8,   nil,    15,   nil,    11,
   nil,     8,   nil,     6,   nil,     8,   nil,    15,     6,   nil,
   nil,   nil,   nil,     4,   nil,   nil,    15,   nil,    15,    15,
   nil,    19,   nil,     6,    19,    20,    19,    19,    20,    15,
    20,    20,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,     6,    21,   nil,   nil,
    21,    15,    21,    21,     6,     4,     6,     6,    15,     6,
     6,   nil,   nil,    15,   nil,   nil,    19,   nil,   nil,   nil,
    20,     6,   nil,     6,     4,   nil,    15,   nil,   nil,     6,
    15,   nil,     6,   nil,    15,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,    20,   nil,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    21 ]

racc_goto_pointer = [
   nil,    15,     4,    14,     6,   nil,    -6,   -35,   -81,   -39,
   nil,   -13,   nil,   nil,   nil,     3,   nil,   nil,   nil,    37,
    41,    63,   nil,   -21,   -56,   nil,   -63,   -38,   nil,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     5,    47,   nil,   nil,    44,
    24,   nil,   161,    43,    23,   157,   160,    22,   159,   158,
   162,   163,   164,   nil,   nil,    37,   nil,   nil,    83,    35,
    36 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 52, :_reduce_1,
  1, 52, :_reduce_2,
  4, 54, :_reduce_3,
  2, 53, :_reduce_4,
  1, 53, :_reduce_5,
  9, 56, :_reduce_6,
  11, 56, :_reduce_7,
  8, 56, :_reduce_8,
  10, 56, :_reduce_9,
  5, 61, :_reduce_10,
  5, 63, :_reduce_11,
  3, 62, :_reduce_12,
  0, 62, :_reduce_13,
  5, 65, :_reduce_14,
  11, 65, :_reduce_15,
  9, 65, :_reduce_16,
  5, 65, :_reduce_17,
  5, 67, :_reduce_18,
  11, 67, :_reduce_19,
  9, 67, :_reduce_20,
  5, 67, :_reduce_21,
  5, 68, :_reduce_22,
  7, 68, :_reduce_23,
  5, 69, :_reduce_24,
  7, 69, :_reduce_25,
  3, 55, :_reduce_26,
  3, 55, :_reduce_27,
  3, 55, :_reduce_28,
  3, 55, :_reduce_29,
  3, 55, :_reduce_30,
  3, 55, :_reduce_31,
  3, 55, :_reduce_32,
  2, 55, :_reduce_33,
  0, 55, :_reduce_34,
  3, 59, :_reduce_35,
  3, 59, :_reduce_36,
  3, 59, :_reduce_37,
  3, 59, :_reduce_38,
  3, 59, :_reduce_39,
  3, 59, :_reduce_40,
  3, 59, :_reduce_41,
  3, 59, :_reduce_42,
  2, 59, :_reduce_43,
  0, 59, :_reduce_44,
  3, 72, :_reduce_45,
  3, 72, :_reduce_46,
  3, 72, :_reduce_47,
  3, 72, :_reduce_48,
  3, 74, :_reduce_49,
  3, 74, :_reduce_50,
  0, 74, :_reduce_51,
  2, 71, :_reduce_52,
  4, 76, :_reduce_53,
  3, 76, :_reduce_54,
  2, 64, :_reduce_55,
  2, 64, :_reduce_56,
  3, 58, :_reduce_57,
  1, 58, :_reduce_58,
  3, 77, :_reduce_59,
  1, 77, :_reduce_60,
  3, 78, :_reduce_61,
  1, 78, :_reduce_62,
  3, 70, :_reduce_63,
  1, 73, :_reduce_64,
  2, 73, :_reduce_65,
  3, 66, :_reduce_66,
  3, 66, :_reduce_67,
  2, 66, :_reduce_68,
  3, 66, :_reduce_69,
  3, 66, :_reduce_70,
  3, 66, :_reduce_71,
  3, 66, :_reduce_72,
  3, 66, :_reduce_73,
  3, 66, :_reduce_74,
  3, 66, :_reduce_75,
  3, 66, :_reduce_76,
  3, 66, :_reduce_77,
  3, 66, :_reduce_78,
  3, 66, :_reduce_79,
  3, 66, :_reduce_80,
  3, 66, :_reduce_81,
  2, 66, :_reduce_82,
  3, 66, :_reduce_83,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  2, 79, :_reduce_88,
  1, 60, :_reduce_89,
  1, 75, :_reduce_90,
  1, 80, :_reduce_91,
  1, 81, :_reduce_92,
  1, 57, :_reduce_93 ]

racc_reduce_n = 94

racc_shift_n = 230

racc_token_table = {
  false => 0,
  :error => 1,
  :PRNTS => 2,
  :NOT => 3,
  :UMINUS => 4,
  :MULT => 5,
  :DIV => 6,
  :INTDIV => 7,
  :MOD => 8,
  :INTMOD => 9,
  :PLUS => 10,
  :MINUS => 11,
  :EQOP => 12,
  :INEQOP => 13,
  :GTOP => 14,
  :GEOP => 15,
  :LTOP => 16,
  :LEOP => 17,
  :AND => 18,
  :OR => 19,
  :PROGRAM => 20,
  :BEGINBLK => 21,
  :ENDBLK => 22,
  :WITH => 23,
  :DO => 24,
  :REPEAT => 25,
  :TIMES => 26,
  :READ => 27,
  :WRITE => 28,
  :WRITELN => 29,
  :IF => 30,
  :THEN => 31,
  :ELSE => 32,
  :WHILE => 33,
  :FOR => 34,
  :FROM => 35,
  :TO => 36,
  :BY => 37,
  :FUNC => 38,
  :RETURN => 39,
  :RETURNTYPE => 40,
  :TYPE => 41,
  :LPARENTH => 42,
  :RPARENTH => 43,
  :ASSIGNOP => 44,
  :SEP => 45,
  :COLON => 46,
  :BOOLEAN => 47,
  :NUMBER => 48,
  :STRING => 49,
  :IDENTIFIER => 50 }

racc_nt_base = 51

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PRNTS",
  "NOT",
  "UMINUS",
  "MULT",
  "DIV",
  "INTDIV",
  "MOD",
  "INTMOD",
  "PLUS",
  "MINUS",
  "EQOP",
  "INEQOP",
  "GTOP",
  "GEOP",
  "LTOP",
  "LEOP",
  "AND",
  "OR",
  "PROGRAM",
  "BEGINBLK",
  "ENDBLK",
  "WITH",
  "DO",
  "REPEAT",
  "TIMES",
  "READ",
  "WRITE",
  "WRITELN",
  "IF",
  "THEN",
  "ELSE",
  "WHILE",
  "FOR",
  "FROM",
  "TO",
  "BY",
  "FUNC",
  "RETURN",
  "RETURNTYPE",
  "TYPE",
  "LPARENTH",
  "RPARENTH",
  "ASSIGNOP",
  "SEP",
  "COLON",
  "BOOLEAN",
  "NUMBER",
  "STRING",
  "IDENTIFIER",
  "$start",
  "S",
  "defblk",
  "programblk",
  "instr",
  "funcdef",
  "ident",
  "paramlist",
  "funcinstr",
  "datatype",
  "withblk",
  "declblk",
  "funcwithblk",
  "decl",
  "iter",
  "expr",
  "funciter",
  "cond",
  "funccond",
  "assign",
  "readblk",
  "writeblk",
  "returnblk",
  "writelist",
  "str",
  "callfunc",
  "arglist",
  "identlist",
  "param",
  "b",
  "n" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 37)
  def _reduce_1(val, _values, result)
    result = S_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 38)
  def _reduce_2(val, _values, result)
    result = S_node.new(nil,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 43)
  def _reduce_3(val, _values, result)
    result = Programblk_node.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 49)
  def _reduce_4(val, _values, result)
    result = Defblk_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 50)
  def _reduce_5(val, _values, result)
    result = Defblk_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 56)
  def _reduce_6(val, _values, result)
    result = Funcdef_node.new(val[0], val[1],val[3],Type_node.new(nil),val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 57)
  def _reduce_7(val, _values, result)
    result = Funcdef_node.new(val[0], val[1],val[3],val[6],val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 58)
  def _reduce_8(val, _values, result)
    result = Funcdef_node.new(val[0], val[1],nil,Type_node.new(nil),val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 59)
  def _reduce_9(val, _values, result)
    result = Funcdef_node.new(val[0], val[1],nil,val[5],val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 64)
  def _reduce_10(val, _values, result)
    result = Withblk_node.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 70)
  def _reduce_11(val, _values, result)
    result = Withblk_node.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 75)
  def _reduce_12(val, _values, result)
    result = Declist_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 76)
  def _reduce_13(val, _values, result)
    result = Declist_node.new(nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 81)
  def _reduce_14(val, _values, result)
    result = While_loop_node.new(val[1],val[3],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 82)
  def _reduce_15(val, _values, result)
    result = For_loop_node.new(val[1],val[3],val[5],val[7],val[9],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 83)
  def _reduce_16(val, _values, result)
    result = For_loop_const_node.new(val[1],val[3],val[5],val[7],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 84)
  def _reduce_17(val, _values, result)
    result = Repeat_loop_node.new(val[1],val[3],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 89)
  def _reduce_18(val, _values, result)
    result = While_loop_node.new(val[1],val[3],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 90)
  def _reduce_19(val, _values, result)
    result = For_loop_node.new(val[1],val[3],val[5],val[7],val[9],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 91)
  def _reduce_20(val, _values, result)
    result = For_loop_const_node.new(val[1],val[3],val[5],val[7],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 92)
  def _reduce_21(val, _values, result)
    result = Repeat_loop_node.new(val[1],val[3],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 97)
  def _reduce_22(val, _values, result)
    result = If_node.new(val[1],val[3],nil,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 98)
  def _reduce_23(val, _values, result)
    result = If_node.new(val[1],val[3],val[5],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_24(val, _values, result)
    result = If_node.new(val[1],val[3],nil,val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_25(val, _values, result)
    result = If_node.new(val[1],val[3],val[5],val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_26(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 110)
  def _reduce_27(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_28(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_29(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_30(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_31(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_32(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 116)
  def _reduce_33(val, _values, result)
    result = Instrlist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_34(val, _values, result)
    result = Instrlist_node.new(nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_35(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_36(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_37(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_38(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_39(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_40(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_41(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_42(val, _values, result)
    result = Instrlist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_43(val, _values, result)
    result = Instrlist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_44(val, _values, result)
    result = Instrlist_node.new(nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_45(val, _values, result)
    result = Write_node.new(val[1],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_46(val, _values, result)
    result = Write_node.new(val[1],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_47(val, _values, result)
    result = Write_node.new(val[1],val[2],true)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_48(val, _values, result)
    result = Write_node.new(val[1],val[2],true)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_49(val, _values, result)
    result = Writelist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_50(val, _values, result)
    result = Writelist_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_51(val, _values, result)
    result = Writelist_node.new(nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_52(val, _values, result)
    result = Read_node.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_53(val, _values, result)
    result = Callfunc_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 158)
  def _reduce_54(val, _values, result)
    result = Callfunc_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 163)
  def _reduce_55(val, _values, result)
    result = Decl_node.new(val[0],nil,val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 164)
  def _reduce_56(val, _values, result)
    result = Decl_node.new(val[0],val[1],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 170)
  def _reduce_57(val, _values, result)
    result = Paramlist_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 171)
  def _reduce_58(val, _values, result)
    result = Paramlist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 176)
  def _reduce_59(val, _values, result)
    result = Arglist_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 177)
  def _reduce_60(val, _values, result)
    result = Arglist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 183)
  def _reduce_61(val, _values, result)
    result = Identlist_node.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 184)
  def _reduce_62(val, _values, result)
    result = Identlist_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 189)
  def _reduce_63(val, _values, result)
    result = Assignop_node.new(val[0],val[2],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 194)
  def _reduce_64(val, _values, result)
    result = Return_node.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 195)
  def _reduce_65(val, _values, result)
    result = Return_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 200)
  def _reduce_66(val, _values, result)
    result = Logical_bin_expr_node.new(val[0],val[2],'CONJUNCTION',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 201)
  def _reduce_67(val, _values, result)
    result = Logical_bin_expr_node.new(val[0],val[2],'DISJUNCTION',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 202)
  def _reduce_68(val, _values, result)
    result = Logical_un_expr_node.new(val[1],'LOGICAL NEGATION',val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 203)
  def _reduce_69(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'EQUALITY',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 204)
  def _reduce_70(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'INEQUALITY',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 205)
  def _reduce_71(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'GREATHER THAN',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 206)
  def _reduce_72(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'GREATHER THAN OR EQUAL',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 207)
  def _reduce_73(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'LESS THAN',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 208)
  def _reduce_74(val, _values, result)
    result = Comp_expr_node.new(val[0],val[2],'LESS THAN OR EQUAL',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 209)
  def _reduce_75(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'MULTIPLICATION',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 210)
  def _reduce_76(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'EXACT DIVISION',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 211)
  def _reduce_77(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'INTEGER DIVISION',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 212)
  def _reduce_78(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'EXACT MODULO',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 213)
  def _reduce_79(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'INTEGER MODULO',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 214)
  def _reduce_80(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'ADDITION',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 215)
  def _reduce_81(val, _values, result)
    result = Arith_bin_expr_node.new(val[0],val[2],'SUBTRACTION',val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 216)
  def _reduce_82(val, _values, result)
    result = Arith_un_expr_node.new(val[1],'ARITHMETIC NEGATION',val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 217)
  def _reduce_83(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

module_eval(<<'.,.,', 'retina_parser.y', 226)
  def _reduce_88(val, _values, result)
    result = Param_node.new(val[0],val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 230)
  def _reduce_89(val, _values, result)
    result = Type_node.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 234)
  def _reduce_90(val, _values, result)
    result = String_node.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 238)
  def _reduce_91(val, _values, result)
    result = Boolean_node.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 242)
  def _reduce_92(val, _values, result)
    result = Number_node.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 246)
  def _reduce_93(val, _values, result)
    result = Identifier_node.new(val[0])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
